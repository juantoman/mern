{"ast":null,"code":"var _jsxFileName = \"/home/juantoman/projectes/mern/client2/src/app/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ResponsiveAppBar } from '../components';\nimport { MoviesList, MoviesInsert, MoviesUpdate, Presentation } from '../pages/Pages';\nimport { Context } from '../components/Context';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //const queryClient = new QueryClient()\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: true,\n      refetchOnmount: true,\n      refetchOnReconnect: true,\n      retry: true,\n      staleTime: 1000,\n      refetchInterval: 100\n    }\n  }\n});\n\nfunction App() {\n  _s();\n\n  const userInfo = {\n    isAuthenticated: false,\n    email: ''\n  };\n  const [context, setContext] = React.useState(userInfo); //console.log({context})\n\n  if (!localStorage.getItem(\"userInfo\")) {\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n  }\n\n  React.useEffect(() => {\n    setContext(JSON.parse(localStorage.getItem(\"userInfo\")));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n        value: [context, setContext],\n        children: [/*#__PURE__*/_jsxDEV(ResponsiveAppBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: context.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movies/list\",\n            exact: true,\n            element: !context.isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n              replace: true,\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(MoviesList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movies/create\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(MoviesInsert, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movies/update/:id\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(MoviesUpdate, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(Presentation, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"vdNI75t4PS3dzdp8Z7Jp7c9MeFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/juantoman/projectes/mern/client2/src/app/index.js"],"names":["React","BrowserRouter","Router","Route","Routes","Navigate","QueryClient","QueryClientProvider","ResponsiveAppBar","MoviesList","MoviesInsert","MoviesUpdate","Presentation","Context","queryClient","defaultOptions","queries","refetchOnWindowFocus","refetchOnmount","refetchOnReconnect","retry","staleTime","refetchInterval","App","userInfo","isAuthenticated","email","context","setContext","useState","localStorage","getItem","setItem","JSON","stringify","useEffect","parse"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider} from 'react-query'\n\nimport { ResponsiveAppBar } from '../components'\nimport { MoviesList, MoviesInsert, MoviesUpdate, Presentation } from '../pages/Pages'\nimport {Context} from '../components/Context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n//const queryClient = new QueryClient()\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: true,\n      refetchOnmount: true,\n      refetchOnReconnect: true,\n      retry: true,\n      staleTime: 1000,\n      refetchInterval: 100,\n    },\n  },\n});\n\nfunction App() {\n\n\n    const userInfo= {\n      isAuthenticated: false,\n      email: ''\n    }\n    const [context, setContext] = React.useState(userInfo);\n    //console.log({context})\n\n    if ( !localStorage.getItem(\"userInfo\") ) {\n      localStorage.setItem('userInfo', JSON.stringify(userInfo))\n    }\n\n    React.useEffect(() => {\n      setContext(JSON.parse(localStorage.getItem(\"userInfo\")))\n    },[]);\n\n    return (\n      <Router>\n        <QueryClientProvider client={queryClient}>\n          <Context.Provider value={[context, setContext]}>\n            <ResponsiveAppBar/>\n            <h3>{context.email}</h3>\n            <Routes>\n              <Route path=\"/movies/list\" exact element={\n                  !context.isAuthenticated ? (\n                    <Navigate replace to=\"/\" />\n                  ) : (\n                    <MoviesList />\n                  )\n                }\n              />\n              <Route path=\"/movies/create\" exact element={<MoviesInsert/>} />\n              <Route path=\"/movies/update/:id\" exact element={<MoviesUpdate/>} />\n              <Route path=\"/\" exact element={<Presentation/>} />\n            </Routes>\n          </Context.Provider>\n        </QueryClientProvider>\n      </Router>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}