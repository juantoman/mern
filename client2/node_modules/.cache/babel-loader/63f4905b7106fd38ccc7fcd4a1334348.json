{"ast":null,"code":"var _jsxFileName = \"/home/juantoman/projectes/mern/client2/src/app/index.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ResponsiveAppBar } from '../components';\nimport { MoviesList, MoviesInsert, MoviesUpdate } from '../pages/Pages';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //const queryClient = new QueryClient()\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: true,\n      refetchOnmount: true,\n      refetchOnReconnect: true,\n      retry: true,\n      staleTime: 1000,\n      refetchInterval: 100\n    }\n  }\n});\n\nconst onSuccessLogin = response => {\n  alert(response.profileObj.email);\n};\n\nconst onLogoutSuccess = response => {\n  alert(\"Logout!!!\");\n};\n\nconst onFailure = response => {\n  alert(\"Error!!!\");\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: [/*#__PURE__*/_jsxDEV(ResponsiveAppBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: \"422269930750-src3psqemmt1p6m8alujf9nvmook5c0d.apps.googleusercontent.com\",\n        buttonText: \"Login with Google\",\n        onSuccess: onSuccessLogin,\n        onFailure: onFailure,\n        cookiePolicy: \"single_host_origin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogout, {\n        clientId: \"422269930750-src3psqemmt1p6m8alujf9nvmook5c0d.apps.googleusercontent.com\",\n        buttonText: \"Logout with Google\",\n        onLogoutSuccess: onLogoutSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies/list\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(MoviesList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies/create\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(MoviesInsert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies/update/:id\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(MoviesUpdate, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/juantoman/projectes/mern/client2/src/app/index.js"],"names":["React","BrowserRouter","Router","Route","Routes","QueryClient","QueryClientProvider","ResponsiveAppBar","MoviesList","MoviesInsert","MoviesUpdate","GoogleLogin","GoogleLogout","queryClient","defaultOptions","queries","refetchOnWindowFocus","refetchOnmount","refetchOnReconnect","retry","staleTime","refetchInterval","onSuccessLogin","response","alert","profileObj","email","onLogoutSuccess","onFailure","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAgD,aAAhD;AAEA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,YAAnC,QAAuD,gBAAvD;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AAEA,OAAO,sCAAP,C,CAEA;;;AAEA,MAAMC,WAAW,GAAG,IAAIR,WAAJ,CAAgB;AAClCS,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,oBAAoB,EAAE,IADf;AAEPC,MAAAA,cAAc,EAAE,IAFT;AAGPC,MAAAA,kBAAkB,EAAE,IAHb;AAIPC,MAAAA,KAAK,EAAE,IAJA;AAKPC,MAAAA,SAAS,EAAE,IALJ;AAMPC,MAAAA,eAAe,EAAE;AANV;AADK;AADkB,CAAhB,CAApB;;AAaA,MAAMC,cAAc,GAAGC,QAAQ,IAAI;AACjCC,EAAAA,KAAK,CAACD,QAAQ,CAACE,UAAT,CAAoBC,KAArB,CAAL;AACD,CAFD;;AAIA,MAAMC,eAAe,GAAGJ,QAAQ,IAAI;AAClCC,EAAAA,KAAK,CAAC,WAAD,CAAL;AACD,CAFD;;AAIA,MAAMI,SAAS,GAAGL,QAAQ,IAAI;AAC5BC,EAAAA,KAAK,CAAC,UAAD,CAAL;AACD,CAFD;;AAIA,SAASK,GAAT,GAAe;AACX,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,mBAAD;AAAqB,MAAA,MAAM,EAAEhB,WAA7B;AAAA,8BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AACE,QAAA,QAAQ,EAAC,0EADX;AAEE,QAAA,UAAU,EAAC,mBAFb;AAGE,QAAA,SAAS,EAAES,cAHb;AAIE,QAAA,SAAS,EAAEM,SAJb;AAKE,QAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,cAFF,eASE,QAAC,YAAD;AACE,QAAA,QAAQ,EAAC,0EADX;AAEE,QAAA,UAAU,EAAC,oBAFb;AAGE,QAAA,eAAe,EAAED;AAHnB;AAAA;AAAA;AAAA;AAAA,cATF,eAcE,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,cAAZ;AAA2B,UAAA,KAAK,MAAhC;AAAiC,UAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,gBAAZ;AAA6B,UAAA,KAAK,MAAlC;AAAmC,UAAA,OAAO,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,oBAAZ;AAAiC,UAAA,KAAK,MAAtC;AAAuC,UAAA,OAAO,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBH;;KAzBQE,G;AA2BT,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider} from 'react-query'\n\nimport { ResponsiveAppBar } from '../components'\nimport { MoviesList, MoviesInsert, MoviesUpdate } from '../pages/Pages'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n//const queryClient = new QueryClient()\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: true,\n      refetchOnmount: true,\n      refetchOnReconnect: true,\n      retry: true,\n      staleTime: 1000,\n      refetchInterval: 100,\n    },\n  },\n});\n\nconst onSuccessLogin = response => {\n  alert(response.profileObj.email);\n};\n\nconst onLogoutSuccess = response => {\n  alert(\"Logout!!!\");\n};\n\nconst onFailure = response => {\n  alert(\"Error!!!\");\n};\n\nfunction App() {\n    return (\n      <Router>\n        <QueryClientProvider client={queryClient}>\n          <ResponsiveAppBar/>\n          <GoogleLogin\n            clientId=\"422269930750-src3psqemmt1p6m8alujf9nvmook5c0d.apps.googleusercontent.com\"\n            buttonText=\"Login with Google\"\n            onSuccess={onSuccessLogin}\n            onFailure={onFailure}\n            cookiePolicy=\"single_host_origin\"\n          />\n          <GoogleLogout\n            clientId=\"422269930750-src3psqemmt1p6m8alujf9nvmook5c0d.apps.googleusercontent.com\"\n            buttonText=\"Logout with Google\"\n            onLogoutSuccess={onLogoutSuccess}\n          />\n          <Routes>\n              <Route path=\"/movies/list\" exact element={<MoviesList/>} />\n              <Route path=\"/movies/create\" exact element={<MoviesInsert/>} />\n              <Route path=\"/movies/update/:id\" exact element={<MoviesUpdate/>} />\n          </Routes>\n        </QueryClientProvider>\n      </Router>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}